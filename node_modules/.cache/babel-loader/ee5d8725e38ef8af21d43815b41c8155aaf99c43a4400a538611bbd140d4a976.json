{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./styles/App.css';import Header from'./components/Header';import About from'./components/About';import Skills from'./components/Skills';import Contact from'./components/Contact';import Footer from'./components/Footer';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[profileData,setProfileData]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[darkMode,setDarkMode]=useState(false);// 다크 모드 설정 로드\nuseEffect(()=>{const savedDarkMode=localStorage.getItem('darkMode');if(savedDarkMode){setDarkMode(JSON.parse(savedDarkMode));}else{// 시스템 다크 모드 감지\nconst systemDarkMode=window.matchMedia('(prefers-color-scheme: dark)').matches;setDarkMode(systemDarkMode);}},[]);// 다크 모드 적용\nuseEffect(()=>{if(darkMode){document.documentElement.setAttribute('data-theme','dark');}else{document.documentElement.setAttribute('data-theme','light');}localStorage.setItem('darkMode',JSON.stringify(darkMode));},[darkMode]);const toggleDarkMode=()=>{setDarkMode(!darkMode);};// 프로필 데이터 가져오기\nuseEffect(()=>{const fetchProfileData=async()=>{try{setLoading(true);setError(null);// GitHub Pages 배포 환경에서는 백엔드 API 호출 건너뛰기\nconst isGitHubPages=window.location.hostname.includes('github.io');if(!isGitHubPages){// 로컬 개발 환경에서만 백엔드 연결 시도\ntry{const healthResponse=await axios.get('http://localhost:3001/health',{timeout:5000,headers:{'Accept':'application/json','Content-Type':'application/json'}});if(healthResponse.status===200){const response=await axios.get('http://localhost:3001/api/profile',{timeout:10000,headers:{'Accept':'application/json','Content-Type':'application/json'}});if(response.data.success){setProfileData(response.data.data);setLoading(false);return;}}}catch(backendError){console.log('Backend not available, using static data');}}// GitHub Pages 또는 백엔드 연결 실패 시 정적 데이터 사용\nsetProfileData({name:'Seungchan An',title:'AI Researcher',email:'vpraise@naver.com',location:'Suwon, South Korea',description:\"Hello! I am a 4th-year student at Tech University of Korea, residing in Suwon. \\n          I am passionate about artificial intelligence research with a focus on advancing the field \\n          through innovative solutions and cutting-edge technologies.\",skills:['Python','C','C++','Java','TensorFlow','PyTorch','OpenCV','ROS','CARLA','MoraiSim','IsaacSim','Git','Docker','LaTeX'],interests:['Reinforcement Learning','Robot Manipulation'],socialLinks:{github:'https://github.com/vpraise00',instagram:'https://instagram.com/vpraise_a',linkedin:'https://www.linkedin.com/in/%EC%8A%B9%EC%B0%AC-%EC%95%88-8a317a373/',email:'mailto:vpraise@naver.com'}});}catch(error){console.error('Error loading profile data:',error);setError(error.message);}finally{setLoading(false);}};fetchProfileData();},[]);// 로딩 상태\nif(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"loading-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Loading portfolio...\"})]});}// 에러 상태 (로컬 개발 환경에서만 백엔드 연결 실패 시 경고 표시)\nconst showWarning=error&&profileData&&!window.location.hostname.includes('github.io');return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[showWarning&&/*#__PURE__*/_jsxs(\"div\",{className:\"connection-warning\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u26A0\\uFE0F Backend connection failed. Using cached data.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>window.location.reload(),children:\"Retry\"})]}),/*#__PURE__*/_jsx(Header,{darkMode:darkMode,toggleDarkMode:toggleDarkMode,profileData:profileData}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(About,{profileData:profileData}),/*#__PURE__*/_jsx(Skills,{skills:(profileData===null||profileData===void 0?void 0:profileData.skills)||[]}),/*#__PURE__*/_jsx(Contact,{profileData:profileData})]}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Header","About","Skills","Contact","Footer","axios","jsx","_jsx","jsxs","_jsxs","App","profileData","setProfileData","loading","setLoading","error","setError","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","JSON","parse","systemDarkMode","window","matchMedia","matches","document","documentElement","setAttribute","setItem","stringify","toggleDarkMode","fetchProfileData","isGitHubPages","location","hostname","includes","healthResponse","get","timeout","headers","status","response","data","success","backendError","console","log","name","title","email","description","skills","interests","socialLinks","github","instagram","linkedin","message","className","children","showWarning","onClick","reload"],"sources":["d:/My_Project/Personal_Projekt/01/Create_Website_with_Claude/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './styles/App.css';\r\nimport Header from './components/Header';\r\nimport About from './components/About';\r\nimport Skills from './components/Skills';\r\nimport Contact from './components/Contact';\r\nimport Footer from './components/Footer';\r\nimport axios from 'axios';\r\n\r\nfunction App() {\r\n  const [profileData, setProfileData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  // 다크 모드 설정 로드\r\n  useEffect(() => {\r\n    const savedDarkMode = localStorage.getItem('darkMode');\r\n    if (savedDarkMode) {\r\n      setDarkMode(JSON.parse(savedDarkMode));\r\n    } else {\r\n      // 시스템 다크 모드 감지\r\n      const systemDarkMode = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n      setDarkMode(systemDarkMode);\r\n    }\r\n  }, []);\r\n\r\n  // 다크 모드 적용\r\n  useEffect(() => {\r\n    if (darkMode) {\r\n      document.documentElement.setAttribute('data-theme', 'dark');\r\n    } else {\r\n      document.documentElement.setAttribute('data-theme', 'light');\r\n    }\r\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\r\n  }, [darkMode]);\r\n\r\n  const toggleDarkMode = () => {\r\n    setDarkMode(!darkMode);\r\n  };\r\n\r\n  // 프로필 데이터 가져오기\r\n  useEffect(() => {\r\n    const fetchProfileData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null);\r\n        \r\n        // GitHub Pages 배포 환경에서는 백엔드 API 호출 건너뛰기\r\n        const isGitHubPages = window.location.hostname.includes('github.io');\r\n        \r\n        if (!isGitHubPages) {\r\n          // 로컬 개발 환경에서만 백엔드 연결 시도\r\n          try {\r\n            const healthResponse = await axios.get('http://localhost:3001/health', {\r\n              timeout: 5000,\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              }\r\n            });\r\n            \r\n            if (healthResponse.status === 200) {\r\n              const response = await axios.get('http://localhost:3001/api/profile', {\r\n                timeout: 10000,\r\n                headers: {\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json'\r\n                }\r\n              });\r\n              \r\n              if (response.data.success) {\r\n                setProfileData(response.data.data);\r\n                setLoading(false);\r\n                return;\r\n              }\r\n            }\r\n          } catch (backendError) {\r\n            console.log('Backend not available, using static data');\r\n          }\r\n        }\r\n        \r\n        // GitHub Pages 또는 백엔드 연결 실패 시 정적 데이터 사용\r\n        setProfileData({\r\n          name: 'Seungchan An',\r\n          title: 'AI Researcher',\r\n          email: 'vpraise@naver.com',\r\n          location: 'Suwon, South Korea',\r\n          description: `Hello! I am a 4th-year student at Tech University of Korea, residing in Suwon. \r\n          I am passionate about artificial intelligence research with a focus on advancing the field \r\n          through innovative solutions and cutting-edge technologies.`,\r\n          skills: [\r\n            'Python', 'C', 'C++', 'Java', 'TensorFlow', \r\n            'PyTorch', 'OpenCV', 'ROS', 'CARLA', 'MoraiSim',\r\n            'IsaacSim', 'Git', 'Docker', 'LaTeX'\r\n          ],\r\n          interests: [\r\n            'Reinforcement Learning', 'Robot Manipulation'\r\n          ],\r\n          socialLinks: {\r\n            github: 'https://github.com/vpraise00',\r\n            instagram: 'https://instagram.com/vpraise_a',\r\n            linkedin: 'https://www.linkedin.com/in/%EC%8A%B9%EC%B0%AC-%EC%95%88-8a317a373/',\r\n            email: 'mailto:vpraise@naver.com'\r\n          }\r\n        });\r\n        \r\n      } catch (error) {\r\n        console.error('Error loading profile data:', error);\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProfileData();\r\n  }, []);\r\n\r\n  // 로딩 상태\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading portfolio...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // 에러 상태 (로컬 개발 환경에서만 백엔드 연결 실패 시 경고 표시)\r\n  const showWarning = error && profileData && !window.location.hostname.includes('github.io');\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {showWarning && (\r\n        <div className=\"connection-warning\">\r\n          <p>⚠️ Backend connection failed. Using cached data.</p>\r\n          <button onClick={() => window.location.reload()}>Retry</button>\r\n        </div>\r\n      )}\r\n      \r\n      <Header \r\n        darkMode={darkMode} \r\n        toggleDarkMode={toggleDarkMode}\r\n        profileData={profileData} \r\n      />\r\n      \r\n      <main>\r\n        <About profileData={profileData} />\r\n        <Skills skills={profileData?.skills || []} />\r\n        <Contact profileData={profileData} />\r\n      </main>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}